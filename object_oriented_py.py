# -*- coding: utf-8 -*-
"""object oriented .py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CZYDHac3QudbIKf7es_dvHQWnM5YhW4q
"""

def create_car(make, model, year):
    car = {}
    car['make'] = make
    car['model'] = model
    car['year'] = year
    car['display_info'] = lambda: print(f"{car['year']} {car['make']} {car['model']}")
    return car
car1 = create_car('Toyota', 'Corolla', 2020)
car2 = create_car('Honda', 'Civic', 2018)

car1['display_info']()
car2['display_info']()

"""1,list creation"""

print("Afreen - 03")
numbers=("80,60,40,20,50")
print(numbers)

"""2,list indexing"""

print("Afreen - 03")
def access_elements(my_list):

    first_element = my_list[0]


    last_element = my_list[-1]


    middle_index = len(my_list) // 2
    middle_element = my_list[middle_index]

    return first_element, last_element, middle_element

my_list = [90,60,30,20,100]


first, last, middle = access_elements(my_list)
print(f"First element: {first}")
print(f"Last element: {last}")
print(f"Middle element: {middle}")

"""list indexing"""

print("Afreen - 03")
num=(10,30,60,90,100)
num1=num[0]
num2=num[-1]
num3=num[len(num)//2]
print(num1)
print(num2)
print(num3)

print("Afreen - 03")
num.append(5)
num.insert(11,1)
print(num)

num.pop()
print(num)
print("Afreen - 03")

a=[1,2,3,4,5,6,7,8,9]
a.sort()
print(a)

print("Afreen - 03")
a=[4,7,5,9,6,3,0,2,8]
a.sort()
print(a)

print("Afreen - 03")
num=[11,13,15,17,19]
result=sum_of_elements(num)
print("Sum of all elements:", result)

print("Afreen - 03")
def sum_of_elements(num):

    total = 0


    for num in num:
        total += num

    return total


my_list = [11, 21, 31, 41, 50]
result = sum_of_elements(my_list)
print("Sum of all elements:", result)

print("Afreen - 03")
def find_max_min(my_list):

    if not my_list:
        return None, None


    max_num = my_list[0]
    min_num = my_list[0]


    for num in my_list:
        if num > max_num:
            max_num = num
        if num < min_num:
            min_num = num

    return max_num, min_num


my_list = [100, 20, 30, 40, 70]
max_num, min_num = find_max_min(my_list)
print("Largest number:", max_num)
print("Smallest number:", min_num)

print("Afreen - 03")
def count_occurrences(my_list, element):

    return my_list.count(element)


my_list = [10, 50, 30, 20, 50, 20]
element = 50
occurrences = count_occurrences(my_list, element)
print(f"The element {element} appears {occurrences} times in the list.")

print("Afreen - 03")

num = (100, 201, 309, 411, 505)

print("First element:", num[0])
print("Second element:", num[1])
print("Third element:", num[2])
print("Fourth element:",num[3])
print("Fifth element:", num[4])

print("Afreen - 03")
def merge_lists(list1, list2):

    merged_list = list(set(list1 + list2))
    return merged_list
list1 = [0, 3, 6, 8]
list2 = [2, 7, 5, 9]
merged = merge_lists(list1, list2)
print("Merged list without duplicates:", merged)

print("Afreen - 03")

num = (100, 201, 309, 411, 505)

print("First element:", num[0])
print("Second element:", num[1])
print("Third element:", num[2])
print("Fourth element:",num[3])
print("Fifth element:", num[4])

vprint("Afreen - 03")

num = (100, 201, 309, 411, 505)

print("First element:", num[0])
print("Second element:", num[1])
print("Third element:", num[2])
print("Fourth element:",num[3])
print("Fifth element:", num[4])

print("Afreen - 03")

num = (100, 201, 309, 411, 505)

print("First element:", num[0])
print("Second element:", num[1])
print("Third element:", num[2])
print("Fourth element:",num[3])
print("Fifth element:", num[4])

print("Afreen - 03")
my_tuple = (10, 20, 30, 40, 50)


a, b, c, d, e = my_tuple


print("Unpacked values:")
print("a:", a)
print("b:", b)
print("c:", c)
print("d:", d)
print("e:", e)

print("Afreen - 03")
my_tuple = (1, 2, 3, 4)
my_list = list(my_tuple)
print("Tuple to List:", my_list)


my_list = [10, 20, 30, 40]
my_tuple = tuple(my_list)
print("List to Tuple:", my_tuple)

print("Afreen - 03")
tuple1 = (1, 2, 3)
tuple2 = (4, 5, 6)


result = tuple1 + tuple2
print("Concatenated Tuple:", result)

print("Afreen - 03")
my_dict = {
    "name": "affu",
    "age": 18,
    "city": "pvg"
}


print("Dictionary:", my_dict)
